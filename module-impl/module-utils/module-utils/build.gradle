apply plugin: 'com.android.library'
apply plugin: 'maven'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    lintOptions {
        abortOnError false
    }

    // 作用将assets文件打入aar 上传到 Nexus
    sourceSets {
        main {
            //res.srcDirs = ['res']
            //java.srcDirs 'src'
            //manifest.srcFile 'AndroidManifest.xml'
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            assets.srcDirs = ['src/main/assets']
            //aar.srcDir = ['libs']
            //jniLibs.srcDirs = ['libs']
            //jniLibs.srcDirs = ['jni']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

dependencies {

    api "com.ms:module-supper-inter:${rootProject.ext.version}"

}


uploadArchives {
    repositories.mavenDeployer {
        repository(url: maven_releases_url) {
            authentication(userName: maven_local_username, password: maven_local_password)
        }

        snapshotRepository(url: maven_snapshot_url) {
            authentication(userName: maven_local_username, password: maven_local_password)
        }

        pom.project {
            // 注意：【这里通过切换 versionName 的赋值来区分上传快照包还是正式包（snapshot 版本必须以 -SNAPSHOT 结尾）】
            //version snapshotVersionName

            //组
            groupId maven_pom_groupid

            //项目名称
            artifactId module_utils
            //  类型
            packaging aar
            // 描述
            description maven_pom_description

            if (SNAPSHOT) {
                // 版本
                version snapshot_versionname
            } else {
                // 版本
                version versionname
            }
        }
    }
}